version: 3.00.00.{build}

os: Visual Studio 2017

branches:
  except:
    - configdata
    - gh-pages

environment:
  matrix:
  - IdeVersion: VS2017
  SKIP_PAUSE: TRUE
  ARCHIVE_WITH_PDB: TRUE

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  # enable MSBuild parallel builds
  parallel: true
  # MSBuild verbosity level
  verbosity: minimal

cache:
  #- packages -> **\packages.config      # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
  - packages\WiX.3.11.0 -> Setup\packages.config

install:
- cmd: git submodule update --init --recursive
- cmd: echo /logger:"%ProgramFiles%\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll">> Directory.Build.rsp
- cmd: |-
    cd Setup
    python set_version_to.py -v %APPVEYOR_BUILD_VERSION% -t %APPVEYOR_BUILD_VERSION%Dev@%APPVEYOR_REPO_COMMIT:~0,5%
    cd ..

# to run your custom scripts instead of automatic MSBuild
build_script:
- ps: |
    Write-Output "Platform: $env:IdeVersion"
    & Setup\Build.cmd
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

# to run your custom scripts instead of automatic tests
test_script:
- ps: |
    $testAssemblies = (Get-ChildItem -Path UnitTests\*\bin\Release\ -Filter '*Tests.dll' -Recurse -Exclude 'ApprovalTests.dll').FullName
    $packageConfig = [xml](Get-Content .nuget\packages.config)
    $opencover_version = $packageConfig.SelectSingleNode('/packages/package[@id="OpenCover"]').version
    $opencover_console = "packages\OpenCover.$opencover_version\tools\OpenCover.Console.exe"
    &$opencover_console `
        -register:user `
        -returntargetcode `
        -hideskipped:All `
        -filter:"+[*]* -[FluentAssertions*]* -[SmartFormat*]* -[nunit*]*" `
        -excludebyattribute:*.ExcludeFromCodeCoverage* `
        -excludebyfile:*\*Designer.cs `
        -output:"OpenCover.GitExtensions.xml" `
        -target:"nunit3-console.exe" `
        -targetargs:"$testAssemblies"
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    $codecov_version = $packageConfig.SelectSingleNode('/packages/package[@id="Codecov"]').version
    $codecov = "packages\Codecov.$codecov_version\tools\codecov.exe"
    &$codecov -f ".\OpenCover.GitExtensions.xml"

# scripts to run after tests
after_test:
- ps: |
    & Setup\BuildInstallers.cmd
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    & Setup\Set-Portable.ps1 -IsPortable
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    & Setup\MakePortableArchive.cmd Release $env:APPVEYOR_BUILD_VERSION
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    & Setup\Set-Portable.ps1
    if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }

artifacts:
    # upload the generated portable archive only
  - path: 'Setup/GitExtensions-Portable-*.zip'

# here we are going to override common configuration
for:

# configuration for all branches starting from "dev-"
# build in Debug mode and deploy locally for testing
-
  branches:
    only:
      - /release\/.*/

  environment:
    spciuser:
      secure: EXePkESDEjb7xVhuZQwxTVFK7hCDDq7n1Mk86Q5PLiH56YNpVBxcJPwomlz8UdC9

#   artifacts:
#     # upload the generated installer
#     - path: 'Setup/GitExtensions-*.msi'

  on_success:
  - ps: |
      pushd .\Setup
      [Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
      Invoke-WebRequest -Uri https://app.signpath.io/API/v1/Tools/SignPath.psm1 -OutFile .\SignPath.psm1
      if (!(Test-Path .\SignPath.psm1)) {
          throw 'Unable to download https://app.signpath.io/API/v1/Tools/SignPath.psm1'
      }
      Import-Module .\SignPath.psm1 -Force;
      $msi = (Resolve-Path GitExtensions-*.msi)[0].Path;
      $msiSigned = $msi.Replace('.msi', '-signed.msi');
      Submit-SigningRequest `
          -InputArtifactPath $msi `
          -CIUserToken $env:spciuser `
          -OrganizationId '0838c0b6-8e2b-441a-81d4-6e895f8bed60' `
          -SigningPolicyId 'e7095762-6b2e-4744-aba6-c44bb9d9d199' `
          -OutputArtifactPath $msiSigned `
          -WaitForCompletionTimeoutInSeconds 120
      $msiName = Split-Path $msi -Leaf
      Push-AppveyorArtifact $msiSigned -FileName $msiName
